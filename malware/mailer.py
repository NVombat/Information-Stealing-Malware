from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email.mime.text import MIMEText
from dotenv import load_dotenv
from email import encoders
import smtplib
import os

load_dotenv()

email_report = os.getenv("REPORT_MAIL")
base_path = os.getenv("LINUX_BASE_PATH")


def send_mail(email: str) -> None:
    """
    Send Email To User

    Args:
        email: Email ID of User

    Returns:
        None
    """
    MAILGUN_EMAIL = os.getenv("MAILGUN_EMAIL")
    MAILGUN_PWD = os.getenv("MAILGUN_PWD")

    try:
        server = smtplib.SMTP("smtp.mailgun.org", 587)
        server.login(MAILGUN_EMAIL, MAILGUN_PWD)
    except:
        print("Error Connecting To Mail Server")

    subject = "Malware Report:"
    body = f"Dear User\n\nThis is a test email\n\nThank you!\n\nWarm Regards,\n\nMalwareSolutions"
    msg = f"Subject: {subject}\n\n{body}"

    try:
        server.sendmail(MAILGUN_EMAIL, email, msg)
    except:
        print("Error Sending Mail")

    server.quit()


def send_mail_with_attachment(fname: str, atcmt: str, email: str) -> None:
    """
    Send Email To User With Attachment

    Args:
        fname: File Name
        atcmt: File Attachement
        email: Email ID of User

    Returns:
        None
    """
    MAILGUN_EMAIL = os.getenv("MAILGUN_EMAIL")
    MAILGUN_PWD = os.getenv("MAILGUN_PWD")

    # Creates the mail object
    msg = MIMEMultipart()
    msg["From"] = MAILGUN_EMAIL
    msg["To"] = email

    msg["Subject"] = "Malware Reports:"
    body = "Dear User\n\nPlease find attached the reports you requested from the Malware application\n\nThank you!\n\nWarm Regards,\n\nMalwareSolutions"
    msg.attach(MIMEText(body, "plain"))

    # File to be attached
    filename = fname
    attachment = open(atcmt, "rb")

    # Attachment is encoded and attached to the mail
    att = MIMEBase("application", "octet-stream")
    att.set_payload((attachment).read())
    encoders.encode_base64(att)
    att.add_header("Content-Disposition", "attachment; filename= %s" % filename)
    msg.attach(att)

    try:
        server = smtplib.SMTP("smtp.mailgun.org", 587)
        server.login(MAILGUN_EMAIL, MAILGUN_PWD)
    except:
        print("Error Connecting To Mail Server")

    text = msg.as_string()

    try:
        server.sendmail(MAILGUN_EMAIL, email, text)
        server.quit()
    except:
        print("Error Sending Mail")


if __name__ == "__main__":
    send_mail(email_report)
    test_file = "test.txt"
    test_path = os.path.join(base_path, test_file)
    send_mail_with_attachment(
        test_file,
        test_path,
        email_report,
    )
